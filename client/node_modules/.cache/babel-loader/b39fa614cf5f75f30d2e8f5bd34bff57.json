{"ast":null,"code":"import _asyncToGenerator from\"/home/bekbol/Desktop/nasa-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/bekbol/Desktop/nasa-project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:resp=_context.sent;_context.next=5;return resp.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var resp;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:resp=_context2.sent;_context2.next=5;return resp.json().sort(function(a,b){return a-b;});case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:\"post\",body:JSON.stringify(launch),headers:{\"Content-Type\":\"application/json\"}});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/home/bekbol/Desktop/nasa-project/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","resp","json","httpGetLaunches","sort","a","b","httpSubmitLaunch","launch","method","body","JSON","stringify","headers","ok","httpAbortLaunch","id"],"mappings":"+PAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,C,QAEeC,CAAAA,c,oJAAf,kKACqBC,CAAAA,KAAK,WAAIF,OAAJ,aAD1B,QACQG,IADR,qCAEeA,CAAAA,IAAI,CAACC,IAAL,EAFf,6G,yDAKeC,CAAAA,e,uJAAf,wKACqBH,CAAAA,KAAK,WAAIF,OAAJ,cAD1B,QACQG,IADR,uCAEeA,CAAAA,IAAI,CAACC,IAAL,GAAYE,IAAZ,CAAiB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACtC,MAAOD,CAAAA,CAAC,CAAGC,CAAX,CACD,CAFY,CAFf,iH,0DAOeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAEiBR,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACxCW,MAAM,CAAE,MADgC,CAExCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFkC,CAGxCK,OAAO,CAAE,CACP,eAAgB,kBADT,CAH+B,CAAxB,CAFtB,qJAUW,CACLC,EAAE,CAAE,KADC,CAVX,uE,2DAkBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OACEjB,cADF,CAEEI,eAFF,CAGEI,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000'\n\nasync function httpGetPlanets() {\n  const resp = await fetch(`${API_URL}/planets`)\n  return await resp.json()\n}\n\nasync function httpGetLaunches() {\n  const resp = await fetch(`${API_URL}/launches`)\n  return await resp.json().sort((a, b) => {\n    return a - b\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      body: JSON.stringify(launch),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  } catch(err) {\n    return {\n      ok: false\n    }\n  }\n\n  \n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}